name: Update README

on:
  schedule:
    - cron: "0 0 * * 0" # Runs every Sunday at 00:00 UTC
  workflow_dispatch: # Allows manual triggering

jobs:
  update-readme:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.17.0"

      - name: Install dependencies
        run: |
          npm install -g @octokit/rest

      - name: Update README
        id: update-readme
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Get current date and time
          CURRENT_DATE=$(date +"%Y-%m-%d %H:%M:%S")
          # URL encode the date (handle spaces and special characters)
          ENCODED_DATE=$(echo "$CURRENT_DATE" | sed 's/ /%20/g' | sed 's/:/%3A/g')

          # Create a temporary file for the projects section
          TEMP_FILE=$(mktemp)

          # Add projects section header
          cat > "$TEMP_FILE" << EOF
          ## Latest Projects

          ### Project Name
          Description
          - **Technologies**: Language
          - **Stars**: Count
          - **Forks**: Count
          - **Last Updated**: Date
          - [View Repository](URL)

          EOF

          # Use Octokit to fetch recent repositories
          REPOS=$(npx -y @octokit/rest@latest repos.listForUser --username dantefasano --sort updated --direction desc --per_page 5)

          # Process each repository
          echo "$REPOS" | jq -r '.[] | select(.fork == false) | "### \(.name)\n\n\(.description)\n\n- **Technologies**: \(.language)\n- **Stars**: \(.stargazers_count)\n- **Forks**: \(.forks_count)\n- **Last Updated**: \(.updated_at)\n- [View Repository](\(.html_url))\n\n"' >> "$TEMP_FILE"

          # Read the existing README
          README_CONTENT=$(cat README.md)

          # Find the start and end of the projects section
          PROJECTS_START=$(echo "$README_CONTENT" | grep -n "## Latest Projects" | cut -d: -f1)
          if [ -z "$PROJECTS_START" ]; then
            # If no projects section exists, add it before the About Me section
            ABOUT_ME_LINE=$(echo "$README_CONTENT" | grep -n "## About Me" | cut -d: -f1)
            if [ -z "$ABOUT_ME_LINE" ]; then
              # If no About Me section, append to the end
              echo "$README_CONTENT" > README.md
              echo -e "\n$(cat $TEMP_FILE)" >> README.md
            else
              # Insert before About Me section
              head -n $((ABOUT_ME_LINE-1)) README.md > README.md.new
              cat "$TEMP_FILE" >> README.md.new
              tail -n +$ABOUT_ME_LINE README.md >> README.md.new
              mv README.md.new README.md
            fi
          else
            # Find the next section header after projects
            NEXT_SECTION=$(echo "$README_CONTENT" | tail -n +$((PROJECTS_START+1)) | grep -n "^## " | head -n 1 | cut -d: -f1)
            if [ -z "$NEXT_SECTION" ]; then
              # If no next section, replace everything after projects
              head -n $((PROJECTS_START-1)) README.md > README.md.new
              cat "$TEMP_FILE" >> README.md.new
              mv README.md.new README.md
            else
              # Replace between projects and next section
              head -n $((PROJECTS_START-1)) README.md > README.md.new
              cat "$TEMP_FILE" >> README.md.new
              tail -n +$((PROJECTS_START+NEXT_SECTION)) README.md >> README.md.new
              mv README.md.new README.md
            fi
          fi

          # Update the last updated timestamp badge with properly encoded date
          sed -i "s|<img src=\"https://img.shields.io/badge/Last%20Updated-.*-2E8BC0?style=for-the-badge\" alt=\"Last Updated\" />|<img src=\"https://img.shields.io/badge/Last%20Updated-$ENCODED_DATE-2E8BC0?style=for-the-badge\" alt=\"Last Updated\" />|" README.md

          # Update "What I'm Working On" section with latest projects
          WORKING_ON_START=$(echo "$README_CONTENT" | grep -n "## ðŸŒ± What I'm Working On" | cut -d: -f1)
          if [ ! -z "$WORKING_ON_START" ]; then
            # Get the next 3 most recent non-forked repositories
            WORKING_ON_REPOS=$(echo "$REPOS" | jq -r '.[] | select(.fork == false) | .name' | head -n 3)
            
            # Create the badges section
            BADGES_SECTION="<div align=\"center\">\n  <table>\n    <tr>"
            for repo in $WORKING_ON_REPOS; do
              BADGES_SECTION+="\n      <td align=\"center\">\n        <img src=\"https://img.shields.io/badge/-${repo}-2E8BC0?style=for-the-badge\" alt=\"${repo}\" />\n      </td>"
            done
            BADGES_SECTION+="\n    </tr>\n  </table>\n</div>"
            
            # Find the end of the working on section
            NEXT_SECTION=$(echo "$README_CONTENT" | tail -n +$((WORKING_ON_START+1)) | grep -n "^## " | head -n 1 | cut -d: -f1)
            if [ ! -z "$NEXT_SECTION" ]; then
              # Replace the content between sections
              head -n $((WORKING_ON_START)) README.md > README.md.new
              echo -e "\n$BADGES_SECTION" >> README.md.new
              tail -n +$((WORKING_ON_START+NEXT_SECTION)) README.md >> README.md.new
              mv README.md.new README.md
            fi
          fi

          # Check if the README was updated
          if git diff --quiet README.md; then
            echo "::notice::No changes detected in README.md"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "::notice::Changes detected in README.md"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.update-readme.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: Update README with latest projects
          branch: update-readme
          delete-branch: true
          title: Update README with latest projects
          body: Automated update of README with latest projects and stats.
          labels: automated-pr
